erlang/timing.txt rev. 04 August 2013 by Stuart Ambler.
Copyright (c) 2013 Stuart Ambler.
Distributed under the Boost License in the accompanying file LICENSE.

Example timing data.

Test runs of testmmerge.cc using erl R15B01, times in seconds:
         k   each          n      pq     lin   heapq
        10  10000     121221    0.29    0.77      NA
        20  10000     192944    0.48    2.20      NA
        30  10000     267084    0.68    4.55      NA
        40  10000     350761    0.98    7.61      NA
        50  10000     480552    1.46   12.97      NA
        60  10000     574155    1.71   18.72      NA
        70  10000     682129    2.15   25.48      NA
        80  10000     786289    2.54   33.96      NA
        90  10000     866374    2.88   51.48      NA
       100  10000     970734    3.20   57.80      NA
       160  10000    1604465    5.73  142.00      NA
      1000  10000    9695026   49.65      NA      NA
       100  20000    1941468    6.59  113.57      NA
       100  40000    3882939   13.71      NA      NA
       100  60000    5824409   22.24      NA      NA
       100  80000    7765875   29.08      NA      NA
       100 100000    9707350   37.14      NA      NA
Thinkpad SL-510 with 8GB memory, Lubuntu 12.10.

The statistical language R gave a good looking straight line for the plot of pq
(priority queue version runtime) vs. log (k) * n; reasonable for lin vs. k * n.

Doing the fitting and plots can be done with just the first 11 rows:
pq  ~=   9.957e-02 +   6.968e-07 * log(k) * n
lin ~=   5.504e-01 +   5.597e-07 *     k  * n

The erlang version for the priority queue method about an eighth to a fifteenth
as fast as the C version, and for the linear method, a thirty-ninth to a
sixty-first; from common/comparetoc.txt.

The sorted output checked Ok vs. original sorted input.
